syntax = "proto3";

package new_world.v1;

import "google/api/annotations.proto";
import "biz.proto";


option go_package = "new-world-robot/api/new-world-api/v1;apipb";
option java_multiple_files = true;
option java_package = "com.world.protobuf.api.v1";
option java_outer_classname = "MarketProtoV1";

// The auth service definition.
service Market {
  rpc List (MarketListRequest) returns (MarketListResult) {
    option (google.api.http) = {
      post: "/api/v1/market/list",
      body: "*"
    };
  }

  rpc Detail (MarketDetailRequest) returns (MarketDetailResult) {
    option (google.api.http) = {
      post: "/api/v1/market/detail",
      body: "*"
    };
  }

  rpc Sell (MarketSellRequest) returns (MarketSellResult) {
    option (google.api.http) = {
      post: "/api/v1/market/sell/start",
      body: "*"
    };
  }

  rpc StopSell (MarketStopSellRequest) returns (MarketStopSellResult) {
    option (google.api.http) = {
      post: "/api/v1/market/sell/stop",
      body: "*"
    };
  }
  rpc Buy (MarketBuyRequest) returns (MarketBuyResult) {
    option (google.api.http) = {
      post: "/api/v1/market/buy",
      body: "*"
    };
  }
  rpc MineList (MarketMineListRequest) returns (MarketMineListResult) {
    option (google.api.http) = {
      post: "/api/v1/market/mine",
      body: "*"
    };
  }
}

enum ProductStatus {
  up_sell = 0;
  down_sell = 1;
  expired = 2;
  complete = 3;
}

message MarketListRequest {
  optional string fish_id = 1;
  optional int64 weight_start = 2;
  optional int64 weight_end = 3;
  optional int64 max_heal_start = 4;
  optional int64 max_heal_end = 5;
  optional int64 heal_start = 6;
  optional int64 heal_end = 7;
  optional int64 recover_speed_start = 8;
  optional int64 recover_speed_end = 9;
  optional int64 atk_start = 10;
  optional int64 atk_end = 11;
  optional int64 def_start = 12;
  optional int64 def_end = 13;
  optional int64 earn_speed_start = 14;
  optional int64 earn_speed_end = 15;
  optional int32 dodge_start = 16;
  optional int32 dodge_end = 17;
  repeated int32 personality_ids = 18;
  optional int32 own_sell_flag = 19;
  optional int64 price_start = 20;
  optional int64 price_end = 21;
  int32 page = 22;
  int32 page_size = 23;
}

message MarketListResult {
  message FishInfo {
    string product_id = 1;
    string fish_id = 2;
    int64 weight = 3;
    int64 master_uid = 4;
    string fish_name = 5;
    int64 icon_source_id = 6;
    string master_name = 7;
    int64 price = 8;
    int64 sell_time_remain = 9;
    map<string, string> extra = 10; // 显示搜索条件的数值
    int32 level = 11;
  }
  repeated FishInfo list = 1;
  int32 current_page = 2;
  int32 page_size = 3;
  int32 total_page = 4;
}

message MarketDetailRequest {
  string product_id = 1;
}

message MarketDetailResult{
  string id = 1;
  string name = 2;
  int64 icon_source_id = 3;
  int64 weight = 4;
  int64 max_heal = 5;
  int64 heal = 6;
  int64 recover_speed = 7;
  int64 atk = 8;
  int64 def = 9;
  int64 earn_speed = 10;
  int32 dodge = 11;
  int64 money = 12;
  int32 personality_id = 13;
  int64 price = 14;
  int64 product_id = 15;
  repeated shared.v1.FishSkill fish_skills = 16;
  shared.v1.FishStatistics fish_statistics = 17;
  int32 level = 18;
}

enum SellDuration {
  half_day = 0;
  one_day = 1;
  three_day = 2;
  one_week = 3;
}

message MarketSellRequest {
  string fish_id = 1;
  SellDuration sell_duration = 2;
  int64 price = 3;
}

message MarketStopSellRequest {
  string fish_id = 1;
}

message MarketBuyRequest {
  string product_id = 1;
}

message MarketBuyResult {
  string product_id = 1;
  string bill_id = 2;
  string fish_id = 3;
  int64 seller_uid = 4;
  string fish_name = 5;
  string seller_name = 6;
  int64 price = 7;
  string settle_time = 8;
}

message MarketMineListRequest {}


message MarketMineListResult {
  message FishInfo {
    string product_id = 1;
    string fish_id = 2;
    int64 weight = 3;
    int64 master_uid = 4;
    string fish_name = 5;
    string icon_source_id = 6;
    string master_name = 7;
    int64 price = 8;
    int64 sell_time_remain = 9;
  }
  repeated FishInfo list = 1;
}

message MarketSellResult {
  optional int64 commission = 1;
}

message MarketStopSellResult {}