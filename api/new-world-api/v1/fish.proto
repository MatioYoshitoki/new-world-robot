syntax = "proto3";

package new_world.v1;

import "google/api/annotations.proto";
import "biz.proto";

option go_package = "new-world-robot/api/new-world-api/v1;apipb";
option java_multiple_files = true;
option java_package = "com.world.protobuf.api.v1";
option java_outer_classname = "FishProtoV1";

// The auth service definition.
service Fish {
  rpc List (FishListRequest) returns (FishListResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/list",
      body: "*"
    };
  }

  rpc DivestitureGodhead (DivestitureGodheadRequest) returns (DivestitureGodheadResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/godhead/divestiture",
      body: "*"
    };
  }

  rpc Refining (FishRefiningRequest) returns (FishRefiningResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/refining",
      body: "*"
    };
  }

  rpc Create (FishCreateRequest) returns (FishCreateResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/create",
      body: "*"
    };
  }

  rpc PoolRank (FishPoolRankRequest) returns (FishPoolRankResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/pool/rank",
      body: "*"
    };
  }
  rpc Sleep (FishSleepRequest) returns (FishSleepResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/sleep",
      body: "*"
    };
  }
  rpc Alive (FishAliveRequest) returns (FishAliveResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/alive",
      body: "*"
    };
  }
  rpc Pull (FishPullRequest) returns (FishPullResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/pull",
      body: "*"
    };
  }
  rpc ParkingList (ParkingListRequest) returns (ParkingListResult) {
    option (google.api.http) = {
      post: "/api/v1/fish/parking/list",
      body: "*"
    };
  }
}

enum Parking {
  Q = 0;
  W = 1;
  E = 2;
  R = 3;
  A = 4;
  F = 5;
}

message DivestitureGodheadRequest {
  string fish_id = 1;
  string godhead_id = 2;
}

message DivestitureGodheadResult {
  string prop_id = 1;
  int32 prop_type = 2;
  string prop_name = 3;
  string prop_remark = 4;
  int64 price = 5;
}

message FishListRequest {}

message FishPullRequest {}

message FishRefiningRequest {
  string fish_id = 1;
}

message ParkingListRequest {}

message ParkingListResult {
  message ParkingDetail {
    string parking = 1;
    optional shared.v1.FishParkingStatus status = 2;
  }
  repeated ParkingDetail parking_list = 1;
}

message FishCreateRequest {}

message FishCreateResult {
  optional string id = 1;
  optional string name = 2;
  optional int64 icon_source_id = 3;
  optional int64 weight = 4;
  optional int64 max_heal = 5;
  optional int64 heal = 6;
  optional int64 recover_speed = 7;
  optional int64 atk = 8;
  optional int64 def = 9;
  optional int64 earn_speed = 10;
  optional int32 dodge = 11;
  optional int64 money = 12;
  optional shared.v1.FishStatus status = 13;
  optional int32 personality_id = 14;
  optional string parking = 15;
  string personality_name = 16;
  optional int32 protect_count = 17;
  optional int32 awaking_remain = 18;
  optional int32 rating = 19;
  optional int32 level = 20;
  shared.v1.FishStatistics fish_statistics = 21;
}

message FishSleepRequest {
  int64 fish_id = 1;
}

message FishSleepResult{}

message FishAliveRequest {
  string fish_id = 1;
}

message FishAliveResult {}

message FishPoolRankRequest {
  int32 page = 1;
  int32 page_size = 2;
  shared.v1.PoolRankType rank_type = 3;
}


message FishPullResult {
  message FishPull {
    string id = 1;
    int64 weight = 2;
    int64 max_heal = 3;
    int64 heal = 4;
    int64 recover_speed = 5;
    int64 atk = 6;
    int64 def = 7;
    int64 earn_speed = 8;
    int32 dodge = 9;
    optional int64 money = 10;
    optional int32 protect_count = 11;
    repeated shared.v1.FishSkill fish_skills = 12;
    optional int32 awaking_remain = 13;
    shared.v1.FishStatistics fish_statistics = 14;
    int32 level = 15;
    repeated shared.v1.FishEffect effects = 16;
    repeated shared.v1.FishGodhead godhead = 17;
  }
  repeated FishPull list = 1;
  int64 ts_ms = 2;
}


message FishListResult {
  repeated shared.v1.FishDetail list = 1;
}

message FishRefiningResult {
  string fish_name = 1;
  int64 fish_icon_source_id = 2;
  int64 prop_id = 3;
  int32 prop_type = 4;
  string prop_name = 5;
  string prop_remark = 6;
  int32 experience = 7;
}

message FishPoolRankResult {
  message MyFishRank {
    string fish_id = 1;
    string fish_name = 2;
    int64 fish_icon_source_id = 3;
    int32 rank = 4;
  }
  message PoolRank {
    string fish_id = 1;
    int64 weight = 2;
    int64 master_uid = 3;
    string master_name = 4;
    int64 alive_time_ms = 5;
    int32 rank = 6;
    shared.v1.FishDetail fish = 7;
  }
  repeated PoolRank list = 1;
  repeated MyFishRank myFishRankList = 2;
  int32 current_page = 3;
  int32 page_size = 4;
  int32 total_page = 5;
}